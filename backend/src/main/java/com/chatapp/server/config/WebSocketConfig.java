package com.chatapp.server.config;// WebSocketConfig.java (Complete Configuration)import org.springframework.context.annotation.Configuration;import org.springframework.messaging.simp.config.MessageBrokerRegistry;import org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker;import org.springframework.web.socket.config.annotation.StompEndpointRegistry;import org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer;@Configuration@EnableWebSocketMessageBroker  // This enables the messaging templatepublic class WebSocketConfig implements WebSocketMessageBrokerConfigurer {    @Override    public void configureMessageBroker(MessageBrokerRegistry config) {        // Enable a simple memory-based message broker to carry messages back to the client        config.enableSimpleBroker("/topic", "/queue");        // Designate the "/app" prefix for messages that are bound for @MessageMapping methods        config.setApplicationDestinationPrefixes("/app");        // Prefix for user-specific messages        config.setUserDestinationPrefix("/user");    }    @Override    public void registerStompEndpoints(StompEndpointRegistry registry) {        // Register STOMP endpoint for SockJS fallback        registry.addEndpoint("/ws-chat")                .setAllowedOriginPatterns("*")                .withSockJS();        // Register STOMP endpoint for raw WebSocket        registry.addEndpoint("/ws-chat-raw")                .setAllowedOriginPatterns("*");    }}